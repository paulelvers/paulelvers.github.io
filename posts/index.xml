<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on paul elvers</title>
    <link>http://paulelvers.com/posts/</link>
    <description>Recent content in Posts on paul elvers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Paul Elvers 2020</copyright>
    <lastBuildDate>Fri, 15 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://paulelvers.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build and train multimodal models</title>
      <link>http://paulelvers.com/posts/multimodal/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://paulelvers.com/posts/multimodal/</guid>
      <description>The problem Imagine a dataframe like this:
   id text url_to_img category weight date produced     123 &amp;ldquo;..&amp;rdquo; http://image&amp;hellip; low 6.8 2021-01-01   789 &amp;ldquo;..&amp;rdquo; http://image&amp;hellip; middle 7.1 2021-01-01   964 &amp;ldquo;..&amp;rdquo; http://image&amp;hellip; high 3.3 2021-01-01    It contains all kinds of data: numerical values, categorical values, timestamps, texts and images. Traditional ml models would face the challenge that they are specialized in a particular kind of data handling: language models in handling text (e.</description>
    </item>
    
    <item>
      <title>SettingWithCopyWarning</title>
      <link>http://paulelvers.com/posts/pandas-things/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://paulelvers.com/posts/pandas-things/</guid>
      <description>Pandas is undoubtedly one of the most important Python libraries in data science and machine learning. Many practitioners in the field are using it on a daily basis. But even as an experienced user, you might have been puzzled by this warning: SettingWithCopyWarning. A value is trying to be set on a copy of a slice from a DataFrame. Try using .loc[row_indexer,col_indexer] = value instead.
It could be tempting to just ignore it, especially when the code does what you wanted.</description>
    </item>
    
  </channel>
</rss>
